{"version":3,"sources":["components/Loader/Loader.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","redux/phonebook/phonebook-selectors.js","components/Loader/Loader.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","phonebookOperations","fetchContacts","dispatch","get","then","data","catch","error","addContact","contact","post","deleteContact","contactId","delete","items","createReducer","_","payload","state","filter","id","loading","combineReducers","connect","value","onChange","e","target","type","className","name","ContactForm","number","nameInputId","shortId","generate","phoneInputId","handleNameChange","event","setState","currentTarget","handlePhoneChange","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","Component","getIsLoading","contacts","getError","getFilteredContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","AppLoader","styles","Loader","style","color","height","width","ContactListItem","onDeleteContact","onClick","ContactList","isLoadingContacts","map","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","phonebookReducer","store","configureStore","reducer","devTools","process","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d1c4d57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2fHZs\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nexport const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\naxios.defaults.baseURL = \"http://localhost:4040/\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n    dispatch(fetchContactsRequest());\r\n  \r\n    axios\r\n      .get(\"/contacts\")\r\n      .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n      .catch((error) => dispatch(fetchContactsError(error)));\r\n  };\r\n  \r\n  const addContact = (contact) => (dispatch) => {\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n  \r\n  const deleteContact = (contactId) => (dispatch) => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`/contacts/${contactId}`)\r\n      .then(() => dispatch(deleteContactSuccess(contactId)))\r\n      .catch((error) => dispatch(deleteContactError(error)));\r\n  };\r\n\r\n\r\nconst phonebookOperations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default phonebookOperations;","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/phonebook/\";\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    <h3>Find contacts by name</h3>\n    <input\n      type=\"text\"\n      className=\"input\"\n      value={value}\n      name=\"filter\"\n      onChange={onChange}\n    ></input>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { phonebookOperations } from \"../../redux/phonebook/\";\nimport shortId from \"shortid\";\nimport \"./ContactForm.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortId.generate();\n  phoneInputId = shortId.generate();\n\n  handleNameChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handlePhoneChange = (event) => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"form-label\" htmlFor={this.nameInputId}>\n          <span className=\"form-label-title\">Name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            name=\"name\"\n          />\n        </label>\n        <label className=\"form-label\" htmlFor={this.phoneInputId}>\n          <span className=\"form-label-title\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            id={this.phoneInputId}\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handlePhoneChange}\n          />\n          <button className=\"form-button button\" type=\"submit\">\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(phonebookOperations.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getIsLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst AppLoader = () => {\n  return (\n    <div className={styles.Loader}>\n      <Loader\n        style={styles}\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\n\nexport default AppLoader;\n","import PropTypes from \"prop-types\";\n\nimport \"./ContactList.css\";\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => (\n  <li className=\"list-item\">\n    <span className=\"list-name\">{name} </span>\n    <span className=\"list-number\">{number} </span>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={() => onDeleteContact(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { phonebookOperations } from \"../../redux/phonebook/\";\nimport { getFilteredContacts, getIsLoading, getError} from \"../../redux/phonebook/phonebook-selectors\";\nimport Loader from '../Loader';\nimport ContactListItem from \"./ContactListItem\";\nimport \"./ContactList.css\";\nimport PropTypes from \"prop-types\";\n\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDeleteContact, isLoadingContacts, error } = this.props;\n    return (\n      <>\n      {isLoadingContacts && <Loader />}\n      {error && <h2>404 Not Found</h2>}\n\n  <ul className=\"contact-list\">\n    {contacts.map((contact) => (\n      <ContactListItem\n        id={contact.id}\n        key={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />))}\n   </ul>\n   </>\n);}\n}\n\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n  isLoadingContacts: getIsLoading(state),\n  error: getError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (contactId) =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n    fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport \"./styles.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"phonebook\">\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { phonebookReducer } from \"./phonebook/\";\n// import storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n// });\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  // devTools: true,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\n// const storeFunc = { store, persistor };\n\n// export default storeFunc;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={storeFunc.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}